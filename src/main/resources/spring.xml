<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
             http://www.springframework.org/schema/beans/spring-beans.xsd
             http://www.springframework.org/schema/tx
             http://www.springframework.org/schema/tx/spring-tx.xsd
              http://www.springframework.org/schema/aop
              http://www.springframework.org/schema/aop/spring-aop.xsd
                http://www.springframework.org/schema/context
              http://www.springframework.org/schema/context/spring-context.xsd">
    <!-- 扫描路径 -->
    <context:component-scan base-package="com.currentbp.test.spring.propagation.required"/>
    <context:component-scan base-package="com.currentbp.interceptor"/>

    <context:annotation-config />

    <aop:aspectj-autoproxy proxy-target-class="true" expose-proxy="false" />


    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <!-- 测试 185数据库  TEST -->
        <!--连接路径-->
        <property name="url"
                  value="jdbc:mysql://127.0.0.1:3306/caipiao?useUnicode=true&amp;characterEncoding=utf-8&amp;useLegacyDatetimeCode=false&amp;serverTimezone=UTC&amp;useAffectedRows=true&amp;zeroDateTimeBehavior=convertToNull&amp;useSSL=false"/>
        <!-- 配置密码加密和统计相关参数，统计慢sql的单位为毫秒，此处配置为3秒钟，超过3秒钟的sql为慢sql -->
        <property name="username" value="root"/><!--用户名-->
        <property name="password" value="123456"/><!--密码-->
        <!--        <property name="filters"  value="config,stat" />&lt;!&ndash;配置一些过滤器类&ndash;&gt;-->
<!--        <property name="connectionProperties"-->
<!--                  value="config.decrypt=true;druid.stat.slowSqlMillis=3000;druid.stat.logSlowSql=true;druid.stat.mergeSql=true"/>&lt;!&ndash;配置具体过滤器类中的属性&ndash;&gt;-->
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="20"/><!--初始化最大的连接数量-->
        <property name="minIdle" value="20"/><!--最小的空闲数量-->
        <property name="maxActive" value="50"/><!--最大的活跃的数量-->
        <property name="maxWait" value="60000"/><!--最长的等待时间-->
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，相当于C3P0的idleConnectionTestPeriod 参数，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="300000"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>
        <!-- 测试连接，单位为毫秒 -->
        <property name="validationQueryTimeout" value="300000"/>
        <property name="validationQuery" value="SELECT sysdate from dual"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <!-- 如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。 -->
        <property name="poolPreparedStatements" value="false"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="50"/>
    </bean>

    <bean name="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- mdc的切面 -->
<!--    <bean id="logSpringFunctionInterceptor" class="com.currentbp.interceptor.LogSpringFunctionInterceptor"/>-->
<!--    <aop:config>-->
<!--        <aop:pointcut id="pointcut" expression="execution(* com.currentbp.test.spring.propagation.required (..))"/>-->
<!--        <aop:aspect ref="logSpringFunctionInterceptor">-->
<!--            <aop:around pointcut-ref="pointcut" method="process"/>-->
<!--        </aop:aspect>-->
<!--    </aop:config>-->
</beans>