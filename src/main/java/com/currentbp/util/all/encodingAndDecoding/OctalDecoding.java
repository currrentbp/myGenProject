package com.currentbp.util.all.encodingAndDecoding;

import org.junit.Test;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;

public class OctalDecoding {

    @Test
    public void t1() {
        String source1 = "\\346\\254\\242\\350\\277\\216\\346\\202\\250\\344\\275\\277\\347\\224\\250\\345\\225\\276\\345\\222\\252\\34" +
                "6\\230\\237\\347\\220\\203\\343\\200\\202\\346\\210\\221\\34" +
                "4\\273\\254\\345\\260\\206\\344\\270\\245\\346\\240\\274\\351\\201\\265\\345\\25" +
                "6\\210\\347\\233\\270\\345\\205\\263\\346\\263\\225\\345\\276\\213\\346\\263\\225\\350\\247\\20" +
                "4\\345\\222\\214\\351\\232\\220\\347\\247\\201\\346\\224\\277\\347\\255\\226\\344\\273\\245\\344\\277\\235\\346\\21" +
                "2\\244\\346\\202\\250\\347\\232\\204\\344\\270\\252\\344\\272\\272\\344\\277\\241\\346\\201\\257\\343\\200\\202\\344\\270\\2" +
                "72\\346\\217\\220\\344\\276\\233\\345\\237\\272\\346\\234\\254\\346\\234\\215\\345\\212\\241\\357\\274\\214\\351\\234\\200\\3" +
                "50\\246\\201\\350\\201\\224\\347\\275\\221\\344\\273\\245\\345\\217\\212\\350\\260\\203\\347\\224\\250\\346\\202\\2" +
                "50\\347\\232\\204\\345\\246\\202\\344\\270\\213\\346\\235\\203\\351\\231\\220\\346\\210\\226\\345\\212\\237\\350\\203\\275\\357" +
                "\\274\\214\\344\\273\\245\\346\\224\\266\\351\\233\\206\\345\\277\\205\\350\\246\\201\\347\\232\\204\\344\\270\\252\\344" +
                "\\272\\272\\344\\277\\241\\346\\201\\257\\357\\274\\232\\343\\200\\201\\346\\211\\213\\346\\234\\272\\345\\255\\230\\345\\" +
                "202\\250\\346\\235\\203\\351\\231\\220\\357\\274\\232\\347\\224\\250\\344\\272\\216\\350\\257\\273\\345\\206\\231\\346\\" +
                "211\\213\\346\\234\\272\\345\\255\\230\\345\\202\\250\\357\\274\\214\\347\\224\\250\\344\\272\\216\\351\\241\\265\\351\\" +
                "235\\242\\345\\206\\205\\345\\256\\271\\347\\274\\223\\345\\255\\230\\357\\274\\214\\344\\277\\235\\350\\257\\201\\351\\2" +
                "41\\265\\351\\235\\242\\351\\241\\272\\347\\225\\205\\346\\265\\217\\350\\247\\210\\357\\274\\233\\345\\246\\202\\346\\23" +
                "6\\234\\346\\202\\250\\344\\270\\215\\345\\220\\214\\346\\204\\217\\350\\260\\203\\347\\224\\250\\344\\273\\245\\344\\270" +
                "\\212\\345\\277\\205\\350\\246\\201\\346\\235\\203\\351\\231\\220\\346\\210\\226\\345\\212\\237\\350\\203\\275\\357\\274\\" +
                "214\\346\\210\\226\\344\\270\\215\\345\\220\\214\\346\\204\\217\\346\\210\\221\\344\\273\\254\\346\\224\\266\\351\\233\\2" +
                "06\\345\\271\\266\\344\\275\\277\\347\\224\\250\\344\\273\\245\\344\\270\\212\\344\\277\\241\\346\\201\\257\\357\\274\\214\\3" +
                "45\\260\\206\\345\\257\\274\\350\\207\\264\\346\\234\\254\\345\\272\\224\\347\\224\\250\\346\\227\\240\\346\\263\\225\\346\\2" +
                "55\\243\\345\\270\\270\\350\\277\\220\\350\\241\\214\\357\\274\\214\\346\\202\\250\\345\\217\\257\\351\\200\\211\\346\\213\\25" +
                "1\\345\\215\\270\\350\\275\\275\\346\\234\\254\\345\\272\\224\\347\\224\\250/\\351\\200\\200\\345\\207\\272\\346\\234\\254\\34" +
                "5\\272\\224\\347\\224\\250/\\345\\211\\215\\345\\276\\200\\342\\200\\234\\350\\256\\276\\347\\275\\256\\342\\200\\235>\\342\\2" +
                "00\\234\\346\\235\\203\\351\\231\\220\\347\\256\\241\\347\\220\\206\\342\\200\\235\\345\\205\\263\\351\\227\\255\\346\\216\\21" +
                "0\\346\\235\\203\\344\\273\\245\\347\\273\\210\\346\\255\\242\\346\\234\\215\\345\\212\\241\\343\\200\\202\\350\\257\\267\\346" +
                "\\202\\250\\351\\230\\205\\350\\257\\273\\345\\271\\266\\345\\220\\214\\346\\204\\217\\343\\200\\212\\347\\224\\250\\346\\210\\" +
                "267\\345\\215\\217\\350\\256\\256\\343\\200\\213\\345\\222\\214\\343\\200\\212\\351\\232\\220\\347\\247\\201\\346\\224\\277\\3" +
                "47\\255\\226\\343\\200\\213";
        String s1 = doDecoding4Octal(source1);
        System.out.println(s1);
    }

    /**
     * 8进制的转译：将8进制的字符串转译成正常utf-8的
     */
    public String doDecoding4Octal(String source) {
        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
        ByteArrayInputStream inputStream = new ByteArrayInputStream(source.getBytes());
        int read = -1;
        byte[] byte3 = new byte[3];
        while ((read = inputStream.read()) > -1) {
            if (read == '\\') {
                try {
                    inputStream.read(byte3);
                } catch (IOException e) {
                    e.printStackTrace();
                }
                outputStream.write(Integer.parseInt(new String(byte3), 8));
            } else {
                outputStream.write(read);
            }
        }
        String decodeMessage = null;
        try {
            decodeMessage = new String(outputStream.toByteArray(), "UTF-8");
        } catch (Exception e) {
            e.printStackTrace();
        }
        return decodeMessage;
    }
}
