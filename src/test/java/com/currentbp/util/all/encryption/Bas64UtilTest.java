package com.currentbp.util.all.encryption;

import com.alibaba.fastjson.JSON;
import org.junit.Assert;
import org.junit.Test;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

/**
 * base64 的测试类
 *
 * @author current_bp
 * @createTime 20170719
 */
public class Bas64UtilTest {
    private final static Logger logger = LoggerFactory.getLogger(Bas64UtilTest.class);

    @Test
    public void decodeBase64() throws Exception {
        String s1 = "\"[{\"n\":\"中文\",\"timeStamp\":1499669187781},{\"n\":\"message.web.js\",\"timeStamp\":1499669187781},{\"n\":\"mine.web.js\",\"timeStamp\":1499669187781}]\"";
        String source = Base64Util.encodeBase64(Base64Util.encodeBase64(s1));
        logger.info("===>source:" + source);
        String source1 = "VzNzaVkzSmxZWFJsVkdsdFpTSTZMVEk0T0RBd01EQXdMQ0pwWkNJNk55d2liV2x1ZG1WeWMybHZiaUk2SWpBaUxDSnVJam9pWTJGc1pXNWtaWElpTENKemRHRjBkWE1pT2pFc0luUnBiV1ZUZEdGdGNDSTZNVFV3TURVeE9UUTRPVFF4Tml3aWRIbHdaU0k2TUN3aWRTSTZJbWgwZEhBNkx5OXZiV3B0TXpKa2RHc3VZbXQwTG1Oc2IzVmtaRzR1WTI5dEwyTmhiR1Z1WkdWeUxuZGxZaTVxY3lJc0luVndaR0YwWlZScGJXVWlPakUxTURBMU1UazBPRGt3TURBc0luWWlPaUl4TGpBdU1DSjlMSHNpWTNKbFlYUmxWR2x0WlNJNkxUSTRPREF3TURBd0xDSmtaWE5qSWpvaXNPQzh0cy9xeCtraUxDSnBaQ0k2T0N3aWJXbHVkbVZ5YzJsdmJpSTZJakFpTENKdUlqb2lZMnhoYzNOa1pYUmhhV3dpTENKemRHRjBkWE1pT2pFc0luUnBiV1ZUZEdGdGNDSTZNVFE1T1RZMk9URTROemM0TVN3aWRIbHdaU0k2TUN3aWRTSTZJbWgwZEhBNkx5OXZiV3B0TXpKa2RHc3VZbXQwTG1Oc2IzVmtaRzR1WTI5dEwyTnNZWE56WkdWMFlXbHNMbmRsWWk1cWN5SXNJblZ3WkdGMFpWUnBiV1VpT2kweU9EZ3dNREF3TUN3aWRpSTZJakV1TUM0d0luMHNleUpqY21WaGRHVlVhVzFsSWpvdE1qZzRNREF3TURBc0ltUmxjMk1pT2lMWDk5SzF6K3JINlNJc0ltbGtJam81TENKdGFXNTJaWEp6YVc5dUlqb2lNQ0lzSW00aU9pSmtaWFJoYVd4eklpd2ljM1JoZEhWeklqb3hMQ0owYVcxbFUzUmhiWEFpT2pFME9UazJOamt4T0RjM09ERXNJblI1Y0dVaU9qQXNJblVpT2lKb2RIUndPaTh2YjIxcWJUTXlaSFJyTG1KcmRDNWpiRzkxWkdSdUxtTnZiUzlrWlhSaGFXeHpMbmRsWWk1cWN5SXNJblZ3WkdGMFpWUnBiV1VpT2kweU9EZ3dNREF3TUN3aWRpSTZJakV1TUM0d0luMHNleUpqY21WaGRHVlVhVzFsSWpvdE1qZzRNREF3TURBc0ltUmxjMk1pT2lMTHE4cW12ODdNdzdHb3VPWWlMQ0pwWkNJNk1UQXNJbTFwYm5abGNuTnBiMjRpT2lJd0lpd2liaUk2SW1Sd2NtVndiM0owSWl3aWMzUmhkSFZ6SWpveExDSjBhVzFsVTNSaGJYQWlPakUwT1RrMk5qa3hPRGMzT0RFc0luUjVjR1VpT2pBc0luVWlPaUpvZEhSd09pOHZiMjFxYlRNeVpIUnJMbUpyZEM1amJHOTFaR1J1TG1OdmJTOWtjSEpsY0c5eWRDNTNaV0l1YW5NaUxDSjFjR1JoZEdWVWFXMWxJam90TWpnNE1EQXdNREFzSW5ZaU9pSXhMakF1TUNKOUxIc2lZM0psWVhSbFZHbHRaU0k2TFRJNE9EQXdNREF3TENKa1pYTmpJam9peUtXMzFzL3RJaXdpYVdRaU9qRXhMQ0p0YVc1MlpYSnphVzl1SWpvaU1DSXNJbTRpT2lKbmIzTm9ZWEpsSWl3aWMzUmhkSFZ6SWpveExDSjBhVzFsVTNSaGJYQWlPakUwT1RrMk5qa3hPRGMzT0RFc0luUjVjR1VpT2pBc0luVWlPaUpvZEhSd09pOHZiMjFxYlRNeVpIUnJMbUpyZEM1amJHOTFaR1J1TG1OdmJTOW5iM05vWVhKbExuZGxZaTVxY3lJc0luVndaR0YwWlZScGJXVWlPaTB5T0Rnd01EQXdNQ3dpZGlJNklqRXVNQzR3SW4wc2V5SmpjbVZoZEdWVWFXMWxJam90TWpnNE1EQXdNREFzSW1SbGMyTWlPaUs5c3RMbHN1bS90Q0lzSW1sa0lqb3hNaXdpYldsdWRtVnljMmx2YmlJNklqQWlMQ0p1SWpvaWFHRnVaRzkxZENJc0luTjBZWFIxY3lJNk1Td2lkR2x0WlZOMFlXMXdJam94TkRrNU5qWTVNVGczTnpneExDSjBlWEJsSWpvd0xDSjFJam9pYUhSMGNEb3ZMMjl0YW0wek1tUjBheTVpYTNRdVkyeHZkV1JrYmk1amIyMHZhR0Z1Wkc5MWRDNTNaV0l1YW5NaUxDSjFjR1JoZEdWVWFXMWxJam90TWpnNE1EQXdNREFzSW5ZaU9pSXhMakF1TUNKOUxIc2lZM0psWVhSbFZHbHRaU0k2TFRJNE9EQXdNREF3TENKa1pYTmpJam9pc09DOHRzL3F4K2t0d1ByS3Q4cjl2dDBpTENKcFpDSTZNVE1zSW0xcGJuWmxjbk5wYjI0aU9pSXdJaXdpYmlJNkltaHBjM1J2Y25samFHRnlkQ0lzSW5OMFlYUjFjeUk2TVN3aWRHbHRaVk4wWVcxd0lqb3hORGs1TmpZNU1UZzNOemd4TENKMGVYQmxJam93TENKMUlqb2lhSFIwY0RvdkwyOXRhbTB6TW1SMGF5NWlhM1F1WTJ4dmRXUmtiaTVqYjIwdmFHbHpkRzl5ZVdOb1lYSjBMbmRsWWk1cWN5SXNJblZ3WkdGMFpWUnBiV1VpT2kweU9EZ3dNREF3TUN3aWRpSTZJakV1TUM0d0luMHNleUpqY21WaGRHVlVhVzFsSWpvdE1qZzRNREF3TURBc0ltUmxjMk1pT2lMQStzcTN5djIrM1NJc0ltbGtJam94TkN3aWJXbHVkbVZ5YzJsdmJpSTZJakFpTENKdUlqb2lhR2x6ZEc5eWVXeHBjM1FpTENKemRHRjBkWE1pT2pFc0luUnBiV1ZUZEdGdGNDSTZNVFE1T1RZMk9URTROemM0TVN3aWRIbHdaU0k2TUN3aWRTSTZJbWgwZEhBNkx5OXZiV3B0TXpKa2RHc3VZbXQwTG1Oc2IzVmtaRzR1WTI5dEwyaHBjM1J2Y25sc2FYTjBMbmRsWWk1cWN5SXNJblZ3WkdGMFpWUnBiV1VpT2kweU9EZ3dNREF3TUN3aWRpSTZJakV1TUM0d0luMHNleUpqY21WaGRHVlVhVzFsSWpvdE1qZzRNREF3TURBc0ltUmxjMk1pT2lLd3J0R256N0M5ek1xbUlpd2lhV1FpT2pFMUxDSnRhVzUyWlhKemFXOXVJam9pTUNJc0ltNGlPaUpwYm1SbGVDSXNJbk4wWVhSMWN5STZNU3dpZEdsdFpWTjBZVzF3SWpveE5EazVOalk1TVRnM056Z3hMQ0owZVhCbElqb3dMQ0oxSWpvaWFIUjBjRG92TDI5dGFtMHpNbVIwYXk1aWEzUXVZMnh2ZFdSa2JpNWpiMjB2YVc1a1pYZ3VkMlZpTG1weklpd2lkWEJrWVhSbFZHbHRaU0k2TFRJNE9EQXdNREF3TENKMklqb2lNUzR3TGpBaWZTeDdJbU55WldGMFpWUnBiV1VpT2kweU9EZ3dNREF3TUN3aVpHVnpZeUk2SXMvN3o2SWlMQ0pwWkNJNk1UWXNJbTFwYm5abGNuTnBiMjRpT2lJd0lpd2liaUk2SW0xbGMzTmhaMlVpTENKemRHRjBkWE1pT2pFc0luUnBiV1ZUZEdGdGNDSTZNVFE1T1RZMk9URTROemM0TVN3aWRIbHdaU0k2TUN3aWRTSTZJbWgwZEhBNkx5OXZiV3B0TXpKa2RHc3VZbXQwTG1Oc2IzVmtaRzR1WTI5dEwyMWxjM05oWjJVdWQyVmlMbXB6SWl3aWRYQmtZWFJsVkdsdFpTSTZMVEk0T0RBd01EQXdMQ0oySWpvaU1TNHdMakFpZlN4N0ltTnlaV0YwWlZScGJXVWlPaTB5T0Rnd01EQXdNQ3dpWkdWell5STZJczdTdGNRaUxDSnBaQ0k2TVRjc0ltMXBiblpsY25OcGIyNGlPaUl3SWl3aWJpSTZJbTFwYm1VaUxDSnpkR0YwZFhNaU9qRXNJblJwYldWVGRHRnRjQ0k2TVRRNU9UWTJPVEU0TnpjNE1Td2lkSGx3WlNJNk1Dd2lkU0k2SW1oMGRIQTZMeTl2YldwdE16SmtkR3N1WW10MExtTnNiM1ZrWkc0dVkyOXRMMjFwYm1VdWQyVmlMbXB6SWl3aWRYQmtZWFJsVkdsdFpTSTZMVEk0T0RBd01EQXdMQ0oySWpvaU1TNHdMakFpZlN4N0ltTnlaV0YwWlZScGJXVWlPaTB5T0Rnd01EQXdNQ3dpWkdWell5STZJczdTdGNTdzRMeTJJaXdpYVdRaU9qRTRMQ0p0YVc1MlpYSnphVzl1SWpvaU1DSXNJbTRpT2lKdGVXTnNZWE56SWl3aWMzUmhkSFZ6SWpveExDSjBhVzFsVTNSaGJYQWlPakUwT1RrMk5qa3hPRGMzT0RFc0luUjVjR1VpT2pBc0luVWlPaUpvZEhSd09pOHZiMjFxYlRNeVpIUnJMbUpyZEM1amJHOTFaR1J1TG1OdmJTOXRlV05zWVhOekxuZGxZaTVxY3lJc0luVndaR0YwWlZScGJXVWlPaTB5T0Rnd01EQXdNQ3dpZGlJNklqRXVNQzR3SW4wc2V5SmpjbVZoZEdWVWFXMWxJam90TWpnNE1EQXdNREFzSW1SbGMyTWlPaUxGeGREUXNQRWlMQ0pwWkNJNk1Ua3NJbTFwYm5abGNuTnBiMjRpT2lJd0lpd2liaUk2SW5KaGJtc2lMQ0p6ZEdGMGRYTWlPakVzSW5ScGJXVlRkR0Z0Y0NJNk1UUTVPVFkyT1RFNE56YzRNU3dpZEhsd1pTSTZNQ3dpZFNJNkltaDBkSEE2THk5dmJXcHRNekprZEdzdVltdDBMbU5zYjNWa1pHNHVZMjl0TDNKaGJtc3VkMlZpTG1weklpd2lkWEJrWVhSbFZHbHRaU0k2TFRJNE9EQXdNREF3TENKMklqb2lNUzR3TGpBaWZTeDdJbU55WldGMFpWUnBiV1VpT2kweU9EZ3dNREF3TUN3aVpHVnpZeUk2SXRHbjFMSFA2c2ZwSWl3aWFXUWlPakl3TENKdGFXNTJaWEp6YVc5dUlqb2lNQ0lzSW00aU9pSnpkSFZrWlhSaGFXeHpJaXdpYzNSaGRIVnpJam94TENKMGFXMWxVM1JoYlhBaU9qRTBPVGsyTmpreE9EYzNPREVzSW5SNWNHVWlPakFzSW5VaU9pSm9kSFJ3T2k4dmIyMXFiVE15WkhSckxtSnJkQzVqYkc5MVpHUnVMbU52YlM5emRIVmtaWFJoYVd4ekxuZGxZaTVxY3lJc0luVndaR0YwWlZScGJXVWlPaTB5T0Rnd01EQXdNQ3dpZGlJNklqRXVNQzR3SW4xZA==";
        String value = Base64Util.decodeBase64(Base64Util.decodeBase64(source1));
        logger.info("=========================================");
        logger.info("===>source:" + source);
        logger.info("===>value:" + value);
        Assert.assertTrue(value.equals(s1));
    }

    @Test
    public void encodeBase64() throws Exception {
    }

    @Test
    public void t1() {
        List<String> strings = new ArrayList<String>();
        strings.add("中国");
        strings.add("美国");
        String s = JSON.toJSONString(strings);
        List<String> strings1 = JSON.parseArray(s, String.class);
        logger.info("===>" + strings1);

        String s1 = "VzNzaVkzSmxZWFJsVkdsdFpTSTZMVEk0T0RBd01EQXdMQ0pwWkNJNk55d2liV2x1ZG1WeWMybHZiaUk2SWpBaUxDSnVJam9pWTJGc1pXNWtaWElpTENKemRHRjBkWE1pT2pFc0luUnBiV1ZUZEdGdGNDSTZNVFV3TURVeE9UUTRPVFF4Tml3aWRIbHdaU0k2TUN3aWRTSTZJbWgwZEhBNkx5OXZiV3B0TXpKa2RHc3VZbXQwTG1Oc2IzVmtaRzR1WTI5dEwyTmhiR1Z1WkdWeUxuZGxZaTVxY3lJc0luVndaR0YwWlZScGJXVWlPakUxTURBMU1UazBPRGt3TURBc0luWWlPaUl4TGpBdU1DSjlMSHNpWTNKbFlYUmxWR2x0WlNJNkxUSTRPREF3TURBd0xDSmtaWE5qSWpvaXNPQzh0cy9xeCtraUxDSnBaQ0k2T0N3aWJXbHVkbVZ5YzJsdmJpSTZJakFpTENKdUlqb2lZMnhoYzNOa1pYUmhhV3dpTENKemRHRjBkWE1pT2pFc0luUnBiV1ZUZEdGdGNDSTZNVFE1T1RZMk9URTROemM0TVN3aWRIbHdaU0k2TUN3aWRTSTZJbWgwZEhBNkx5OXZiV3B0TXpKa2RHc3VZbXQwTG1Oc2IzVmtaRzR1WTI5dEwyTnNZWE56WkdWMFlXbHNMbmRsWWk1cWN5SXNJblZ3WkdGMFpWUnBiV1VpT2kweU9EZ3dNREF3TUN3aWRpSTZJakV1TUM0d0luMHNleUpqY21WaGRHVlVhVzFsSWpvdE1qZzRNREF3TURBc0ltUmxjMk1pT2lMWDk5SzF6K3JINlNJc0ltbGtJam81TENKdGFXNTJaWEp6YVc5dUlqb2lNQ0lzSW00aU9pSmtaWFJoYVd4eklpd2ljM1JoZEhWeklqb3hMQ0owYVcxbFUzUmhiWEFpT2pFME9UazJOamt4T0RjM09ERXNJblI1Y0dVaU9qQXNJblVpT2lKb2RIUndPaTh2YjIxcWJUTXlaSFJyTG1KcmRDNWpiRzkxWkdSdUxtTnZiUzlrWlhSaGFXeHpMbmRsWWk1cWN5SXNJblZ3WkdGMFpWUnBiV1VpT2kweU9EZ3dNREF3TUN3aWRpSTZJakV1TUM0d0luMHNleUpqY21WaGRHVlVhVzFsSWpvdE1qZzRNREF3TURBc0ltUmxjMk1pT2lMTHE4cW12ODdNdzdHb3VPWWlMQ0pwWkNJNk1UQXNJbTFwYm5abGNuTnBiMjRpT2lJd0lpd2liaUk2SW1Sd2NtVndiM0owSWl3aWMzUmhkSFZ6SWpveExDSjBhVzFsVTNSaGJYQWlPakUwT1RrMk5qa3hPRGMzT0RFc0luUjVjR1VpT2pBc0luVWlPaUpvZEhSd09pOHZiMjFxYlRNeVpIUnJMbUpyZEM1amJHOTFaR1J1TG1OdmJTOWtjSEpsY0c5eWRDNTNaV0l1YW5NaUxDSjFjR1JoZEdWVWFXMWxJam90TWpnNE1EQXdNREFzSW5ZaU9pSXhMakF1TUNKOUxIc2lZM0psWVhSbFZHbHRaU0k2TFRJNE9EQXdNREF3TENKa1pYTmpJam9peUtXMzFzL3RJaXdpYVdRaU9qRXhMQ0p0YVc1MlpYSnphVzl1SWpvaU1DSXNJbTRpT2lKbmIzTm9ZWEpsSWl3aWMzUmhkSFZ6SWpveExDSjBhVzFsVTNSaGJYQWlPakUwT1RrMk5qa3hPRGMzT0RFc0luUjVjR1VpT2pBc0luVWlPaUpvZEhSd09pOHZiMjFxYlRNeVpIUnJMbUpyZEM1amJHOTFaR1J1TG1OdmJTOW5iM05vWVhKbExuZGxZaTVxY3lJc0luVndaR0YwWlZScGJXVWlPaTB5T0Rnd01EQXdNQ3dpZGlJNklqRXVNQzR3SW4wc2V5SmpjbVZoZEdWVWFXMWxJam90TWpnNE1EQXdNREFzSW1SbGMyTWlPaUs5c3RMbHN1bS90Q0lzSW1sa0lqb3hNaXdpYldsdWRtVnljMmx2YmlJNklqQWlMQ0p1SWpvaWFHRnVaRzkxZENJc0luTjBZWFIxY3lJNk1Td2lkR2x0WlZOMFlXMXdJam94TkRrNU5qWTVNVGczTnpneExDSjBlWEJsSWpvd0xDSjFJam9pYUhSMGNEb3ZMMjl0YW0wek1tUjBheTVpYTNRdVkyeHZkV1JrYmk1amIyMHZhR0Z1Wkc5MWRDNTNaV0l1YW5NaUxDSjFjR1JoZEdWVWFXMWxJam90TWpnNE1EQXdNREFzSW5ZaU9pSXhMakF1TUNKOUxIc2lZM0psWVhSbFZHbHRaU0k2TFRJNE9EQXdNREF3TENKa1pYTmpJam9pc09DOHRzL3F4K2t0d1ByS3Q4cjl2dDBpTENKcFpDSTZNVE1zSW0xcGJuWmxjbk5wYjI0aU9pSXdJaXdpYmlJNkltaHBjM1J2Y25samFHRnlkQ0lzSW5OMFlYUjFjeUk2TVN3aWRHbHRaVk4wWVcxd0lqb3hORGs1TmpZNU1UZzNOemd4TENKMGVYQmxJam93TENKMUlqb2lhSFIwY0RvdkwyOXRhbTB6TW1SMGF5NWlhM1F1WTJ4dmRXUmtiaTVqYjIwdmFHbHpkRzl5ZVdOb1lYSjBMbmRsWWk1cWN5SXNJblZ3WkdGMFpWUnBiV1VpT2kweU9EZ3dNREF3TUN3aWRpSTZJakV1TUM0d0luMHNleUpqY21WaGRHVlVhVzFsSWpvdE1qZzRNREF3TURBc0ltUmxjMk1pT2lMQStzcTN5djIrM1NJc0ltbGtJam94TkN3aWJXbHVkbVZ5YzJsdmJpSTZJakFpTENKdUlqb2lhR2x6ZEc5eWVXeHBjM1FpTENKemRHRjBkWE1pT2pFc0luUnBiV1ZUZEdGdGNDSTZNVFE1T1RZMk9URTROemM0TVN3aWRIbHdaU0k2TUN3aWRTSTZJbWgwZEhBNkx5OXZiV3B0TXpKa2RHc3VZbXQwTG1Oc2IzVmtaRzR1WTI5dEwyaHBjM1J2Y25sc2FYTjBMbmRsWWk1cWN5SXNJblZ3WkdGMFpWUnBiV1VpT2kweU9EZ3dNREF3TUN3aWRpSTZJakV1TUM0d0luMHNleUpqY21WaGRHVlVhVzFsSWpvdE1qZzRNREF3TURBc0ltUmxjMk1pT2lLd3J0R256N0M5ek1xbUlpd2lhV1FpT2pFMUxDSnRhVzUyWlhKemFXOXVJam9pTUNJc0ltNGlPaUpwYm1SbGVDSXNJbk4wWVhSMWN5STZNU3dpZEdsdFpWTjBZVzF3SWpveE5EazVOalk1TVRnM056Z3hMQ0owZVhCbElqb3dMQ0oxSWpvaWFIUjBjRG92TDI5dGFtMHpNbVIwYXk1aWEzUXVZMnh2ZFdSa2JpNWpiMjB2YVc1a1pYZ3VkMlZpTG1weklpd2lkWEJrWVhSbFZHbHRaU0k2TFRJNE9EQXdNREF3TENKMklqb2lNUzR3TGpBaWZTeDdJbU55WldGMFpWUnBiV1VpT2kweU9EZ3dNREF3TUN3aVpHVnpZeUk2SXMvN3o2SWlMQ0pwWkNJNk1UWXNJbTFwYm5abGNuTnBiMjRpT2lJd0lpd2liaUk2SW0xbGMzTmhaMlVpTENKemRHRjBkWE1pT2pFc0luUnBiV1ZUZEdGdGNDSTZNVFE1T1RZMk9URTROemM0TVN3aWRIbHdaU0k2TUN3aWRTSTZJbWgwZEhBNkx5OXZiV3B0TXpKa2RHc3VZbXQwTG1Oc2IzVmtaRzR1WTI5dEwyMWxjM05oWjJVdWQyVmlMbXB6SWl3aWRYQmtZWFJsVkdsdFpTSTZMVEk0T0RBd01EQXdMQ0oySWpvaU1TNHdMakFpZlN4N0ltTnlaV0YwWlZScGJXVWlPaTB5T0Rnd01EQXdNQ3dpWkdWell5STZJczdTdGNRaUxDSnBaQ0k2TVRjc0ltMXBiblpsY25OcGIyNGlPaUl3SWl3aWJpSTZJbTFwYm1VaUxDSnpkR0YwZFhNaU9qRXNJblJwYldWVGRHRnRjQ0k2TVRRNU9UWTJPVEU0TnpjNE1Td2lkSGx3WlNJNk1Dd2lkU0k2SW1oMGRIQTZMeTl2YldwdE16SmtkR3N1WW10MExtTnNiM1ZrWkc0dVkyOXRMMjFwYm1VdWQyVmlMbXB6SWl3aWRYQmtZWFJsVkdsdFpTSTZMVEk0T0RBd01EQXdMQ0oySWpvaU1TNHdMakFpZlN4N0ltTnlaV0YwWlZScGJXVWlPaTB5T0Rnd01EQXdNQ3dpWkdWell5STZJczdTdGNTdzRMeTJJaXdpYVdRaU9qRTRMQ0p0YVc1MlpYSnphVzl1SWpvaU1DSXNJbTRpT2lKdGVXTnNZWE56SWl3aWMzUmhkSFZ6SWpveExDSjBhVzFsVTNSaGJYQWlPakUwT1RrMk5qa3hPRGMzT0RFc0luUjVjR1VpT2pBc0luVWlPaUpvZEhSd09pOHZiMjFxYlRNeVpIUnJMbUpyZEM1amJHOTFaR1J1TG1OdmJTOXRlV05zWVhOekxuZGxZaTVxY3lJc0luVndaR0YwWlZScGJXVWlPaTB5T0Rnd01EQXdNQ3dpZGlJNklqRXVNQzR3SW4wc2V5SmpjbVZoZEdWVWFXMWxJam90TWpnNE1EQXdNREFzSW1SbGMyTWlPaUxGeGREUXNQRWlMQ0pwWkNJNk1Ua3NJbTFwYm5abGNuTnBiMjRpT2lJd0lpd2liaUk2SW5KaGJtc2lMQ0p6ZEdGMGRYTWlPakVzSW5ScGJXVlRkR0Z0Y0NJNk1UUTVPVFkyT1RFNE56YzRNU3dpZEhsd1pTSTZNQ3dpZFNJNkltaDBkSEE2THk5dmJXcHRNekprZEdzdVltdDBMbU5zYjNWa1pHNHVZMjl0TDNKaGJtc3VkMlZpTG1weklpd2lkWEJrWVhSbFZHbHRaU0k2TFRJNE9EQXdNREF3TENKMklqb2lNUzR3TGpBaWZTeDdJbU55WldGMFpWUnBiV1VpT2kweU9EZ3dNREF3TUN3aVpHVnpZeUk2SXRHbjFMSFA2c2ZwSWl3aWFXUWlPakl3TENKdGFXNTJaWEp6YVc5dUlqb2lNQ0lzSW00aU9pSnpkSFZrWlhSaGFXeHpJaXdpYzNSaGRIVnpJam94TENKMGFXMWxVM1JoYlhBaU9qRTBPVGsyTmpreE9EYzNPREVzSW5SNWNHVWlPakFzSW5VaU9pSm9kSFJ3T2k4dmIyMXFiVE15WkhSckxtSnJkQzVqYkc5MVpHUnVMbU52YlM5emRIVmtaWFJoYVd4ekxuZGxZaTVxY3lJc0luVndaR0YwWlZScGJXVWlPaTB5T0Rnd01EQXdNQ3dpZGlJNklqRXVNQzR3SW4xZA==";
        String value = Base64Util.decodeBase64(Base64Util.decodeBase64(s1));
        logger.info("===>value:" + value);
        List<Map> list = JSON.parseArray(value, Map.class);
        logger.info("===>list:" + list);

    }

    @Test
    public void zhongwen() {
        String zw = "[{\"n\":\"中国\",\"timeStamp\":10},{\"n\":\"中国\",\"timeStamp\":10},{\"n\":\"中国\",\"timeStamp\":10}]";
        String value = Base64Util.encodeBase64(zw);
        String sssss = "W3sibiI6ItbQufoiLCJ0aW1lU3RhbXAiOjEwfSx7Im4iOiLW0Ln6IiwidGltZVN0YW1wIjoxMH0seyJuIjoi1tC5+iIsInRpbWVTdGFtcCI6MTB9XQ==";
        logger.info("===>value:" + value);
        logger.info("===>sssss:" + sssss);
//        Assert.assertTrue(sssss.equals(value));
        String value3 = "VzNzaVkzSmxZWFJsVkdsdFpTSTZMVEk0T0RBd01EQXdMQ0pwWkNJNk55d2liV2x1ZG1WeWMybHZiaUk2SWpBaUxDSnVJam9pWTJGc1pXNWtaWElpTENKemRHRjBkWE1pT2pFc0luUnBiV1ZUZEdGdGNDSTZNVFV3TURVeE9UUTRPVFF4Tml3aWRIbHdaU0k2TUN3aWRTSTZJbWgwZEhBNkx5OXZiV3B0TXpKa2RHc3VZbXQwTG1Oc2IzVmtaRzR1WTI5dEwyTmhiR1Z1WkdWeUxuZGxZaTVxY3lJc0luVndaR0YwWlZScGJXVWlPakUxTURBMU1UazBPRGt3TURBc0luWWlPaUl4TGpBdU1DSjlMSHNpWTNKbFlYUmxWR2x0WlNJNkxUSTRPREF3TURBd0xDSmtaWE5qSWpvaXNPQzh0cy9xeCtraUxDSnBaQ0k2T0N3aWJXbHVkbVZ5YzJsdmJpSTZJakFpTENKdUlqb2lZMnhoYzNOa1pYUmhhV3dpTENKemRHRjBkWE1pT2pFc0luUnBiV1ZUZEdGdGNDSTZNVFE1T1RZMk9URTROemM0TVN3aWRIbHdaU0k2TUN3aWRTSTZJbWgwZEhBNkx5OXZiV3B0TXpKa2RHc3VZbXQwTG1Oc2IzVmtaRzR1WTI5dEwyTnNZWE56WkdWMFlXbHNMbmRsWWk1cWN5SXNJblZ3WkdGMFpWUnBiV1VpT2kweU9EZ3dNREF3TUN3aWRpSTZJakV1TUM0d0luMHNleUpqY21WaGRHVlVhVzFsSWpvdE1qZzRNREF3TURBc0ltUmxjMk1pT2lMWDk5SzF6K3JINlNJc0ltbGtJam81TENKdGFXNTJaWEp6YVc5dUlqb2lNQ0lzSW00aU9pSmtaWFJoYVd4eklpd2ljM1JoZEhWeklqb3hMQ0owYVcxbFUzUmhiWEFpT2pFME9UazJOamt4T0RjM09ERXNJblI1Y0dVaU9qQXNJblVpT2lKb2RIUndPaTh2YjIxcWJUTXlaSFJyTG1KcmRDNWpiRzkxWkdSdUxtTnZiUzlrWlhSaGFXeHpMbmRsWWk1cWN5SXNJblZ3WkdGMFpWUnBiV1VpT2kweU9EZ3dNREF3TUN3aWRpSTZJakV1TUM0d0luMHNleUpqY21WaGRHVlVhVzFsSWpvdE1qZzRNREF3TURBc0ltUmxjMk1pT2lMTHE4cW12ODdNdzdHb3VPWWlMQ0pwWkNJNk1UQXNJbTFwYm5abGNuTnBiMjRpT2lJd0lpd2liaUk2SW1Sd2NtVndiM0owSWl3aWMzUmhkSFZ6SWpveExDSjBhVzFsVTNSaGJYQWlPakUwT1RrMk5qa3hPRGMzT0RFc0luUjVjR1VpT2pBc0luVWlPaUpvZEhSd09pOHZiMjFxYlRNeVpIUnJMbUpyZEM1amJHOTFaR1J1TG1OdmJTOWtjSEpsY0c5eWRDNTNaV0l1YW5NaUxDSjFjR1JoZEdWVWFXMWxJam90TWpnNE1EQXdNREFzSW5ZaU9pSXhMakF1TUNKOUxIc2lZM0psWVhSbFZHbHRaU0k2TFRJNE9EQXdNREF3TENKa1pYTmpJam9peUtXMzFzL3RJaXdpYVdRaU9qRXhMQ0p0YVc1MlpYSnphVzl1SWpvaU1DSXNJbTRpT2lKbmIzTm9ZWEpsSWl3aWMzUmhkSFZ6SWpveExDSjBhVzFsVTNSaGJYQWlPakUwT1RrMk5qa3hPRGMzT0RFc0luUjVjR1VpT2pBc0luVWlPaUpvZEhSd09pOHZiMjFxYlRNeVpIUnJMbUpyZEM1amJHOTFaR1J1TG1OdmJTOW5iM05vWVhKbExuZGxZaTVxY3lJc0luVndaR0YwWlZScGJXVWlPaTB5T0Rnd01EQXdNQ3dpZGlJNklqRXVNQzR3SW4wc2V5SmpjbVZoZEdWVWFXMWxJam90TWpnNE1EQXdNREFzSW1SbGMyTWlPaUs5c3RMbHN1bS90Q0lzSW1sa0lqb3hNaXdpYldsdWRtVnljMmx2YmlJNklqQWlMQ0p1SWpvaWFHRnVaRzkxZENJc0luTjBZWFIxY3lJNk1Td2lkR2x0WlZOMFlXMXdJam94TkRrNU5qWTVNVGczTnpneExDSjBlWEJsSWpvd0xDSjFJam9pYUhSMGNEb3ZMMjl0YW0wek1tUjBheTVpYTNRdVkyeHZkV1JrYmk1amIyMHZhR0Z1Wkc5MWRDNTNaV0l1YW5NaUxDSjFjR1JoZEdWVWFXMWxJam90TWpnNE1EQXdNREFzSW5ZaU9pSXhMakF1TUNKOUxIc2lZM0psWVhSbFZHbHRaU0k2TFRJNE9EQXdNREF3TENKa1pYTmpJam9pc09DOHRzL3F4K2t0d1ByS3Q4cjl2dDBpTENKcFpDSTZNVE1zSW0xcGJuWmxjbk5wYjI0aU9pSXdJaXdpYmlJNkltaHBjM1J2Y25samFHRnlkQ0lzSW5OMFlYUjFjeUk2TVN3aWRHbHRaVk4wWVcxd0lqb3hORGs1TmpZNU1UZzNOemd4TENKMGVYQmxJam93TENKMUlqb2lhSFIwY0RvdkwyOXRhbTB6TW1SMGF5NWlhM1F1WTJ4dmRXUmtiaTVqYjIwdmFHbHpkRzl5ZVdOb1lYSjBMbmRsWWk1cWN5SXNJblZ3WkdGMFpWUnBiV1VpT2kweU9EZ3dNREF3TUN3aWRpSTZJakV1TUM0d0luMHNleUpqY21WaGRHVlVhVzFsSWpvdE1qZzRNREF3TURBc0ltUmxjMk1pT2lMQStzcTN5djIrM1NJc0ltbGtJam94TkN3aWJXbHVkbVZ5YzJsdmJpSTZJakFpTENKdUlqb2lhR2x6ZEc5eWVXeHBjM1FpTENKemRHRjBkWE1pT2pFc0luUnBiV1ZUZEdGdGNDSTZNVFE1T1RZMk9URTROemM0TVN3aWRIbHdaU0k2TUN3aWRTSTZJbWgwZEhBNkx5OXZiV3B0TXpKa2RHc3VZbXQwTG1Oc2IzVmtaRzR1WTI5dEwyaHBjM1J2Y25sc2FYTjBMbmRsWWk1cWN5SXNJblZ3WkdGMFpWUnBiV1VpT2kweU9EZ3dNREF3TUN3aWRpSTZJakV1TUM0d0luMHNleUpqY21WaGRHVlVhVzFsSWpvdE1qZzRNREF3TURBc0ltUmxjMk1pT2lLd3J0R256N0M5ek1xbUlpd2lhV1FpT2pFMUxDSnRhVzUyWlhKemFXOXVJam9pTUNJc0ltNGlPaUpwYm1SbGVDSXNJbk4wWVhSMWN5STZNU3dpZEdsdFpWTjBZVzF3SWpveE5EazVOalk1TVRnM056Z3hMQ0owZVhCbElqb3dMQ0oxSWpvaWFIUjBjRG92TDI5dGFtMHpNbVIwYXk1aWEzUXVZMnh2ZFdSa2JpNWpiMjB2YVc1a1pYZ3VkMlZpTG1weklpd2lkWEJrWVhSbFZHbHRaU0k2TFRJNE9EQXdNREF3TENKMklqb2lNUzR3TGpBaWZTeDdJbU55WldGMFpWUnBiV1VpT2kweU9EZ3dNREF3TUN3aVpHVnpZeUk2SXMvN3o2SWlMQ0pwWkNJNk1UWXNJbTFwYm5abGNuTnBiMjRpT2lJd0lpd2liaUk2SW0xbGMzTmhaMlVpTENKemRHRjBkWE1pT2pFc0luUnBiV1ZUZEdGdGNDSTZNVFE1T1RZMk9URTROemM0TVN3aWRIbHdaU0k2TUN3aWRTSTZJbWgwZEhBNkx5OXZiV3B0TXpKa2RHc3VZbXQwTG1Oc2IzVmtaRzR1WTI5dEwyMWxjM05oWjJVdWQyVmlMbXB6SWl3aWRYQmtZWFJsVkdsdFpTSTZMVEk0T0RBd01EQXdMQ0oySWpvaU1TNHdMakFpZlN4N0ltTnlaV0YwWlZScGJXVWlPaTB5T0Rnd01EQXdNQ3dpWkdWell5STZJczdTdGNRaUxDSnBaQ0k2TVRjc0ltMXBiblpsY25OcGIyNGlPaUl3SWl3aWJpSTZJbTFwYm1VaUxDSnpkR0YwZFhNaU9qRXNJblJwYldWVGRHRnRjQ0k2TVRRNU9UWTJPVEU0TnpjNE1Td2lkSGx3WlNJNk1Dd2lkU0k2SW1oMGRIQTZMeTl2YldwdE16SmtkR3N1WW10MExtTnNiM1ZrWkc0dVkyOXRMMjFwYm1VdWQyVmlMbXB6SWl3aWRYQmtZWFJsVkdsdFpTSTZMVEk0T0RBd01EQXdMQ0oySWpvaU1TNHdMakFpZlN4N0ltTnlaV0YwWlZScGJXVWlPaTB5T0Rnd01EQXdNQ3dpWkdWell5STZJczdTdGNTdzRMeTJJaXdpYVdRaU9qRTRMQ0p0YVc1MlpYSnphVzl1SWpvaU1DSXNJbTRpT2lKdGVXTnNZWE56SWl3aWMzUmhkSFZ6SWpveExDSjBhVzFsVTNSaGJYQWlPakUwT1RrMk5qa3hPRGMzT0RFc0luUjVjR1VpT2pBc0luVWlPaUpvZEhSd09pOHZiMjFxYlRNeVpIUnJMbUpyZEM1amJHOTFaR1J1TG1OdmJTOXRlV05zWVhOekxuZGxZaTVxY3lJc0luVndaR0YwWlZScGJXVWlPaTB5T0Rnd01EQXdNQ3dpZGlJNklqRXVNQzR3SW4wc2V5SmpjbVZoZEdWVWFXMWxJam90TWpnNE1EQXdNREFzSW1SbGMyTWlPaUxGeGREUXNQRWlMQ0pwWkNJNk1Ua3NJbTFwYm5abGNuTnBiMjRpT2lJd0lpd2liaUk2SW5KaGJtc2lMQ0p6ZEdGMGRYTWlPakVzSW5ScGJXVlRkR0Z0Y0NJNk1UUTVPVFkyT1RFNE56YzRNU3dpZEhsd1pTSTZNQ3dpZFNJNkltaDBkSEE2THk5dmJXcHRNekprZEdzdVltdDBMbU5zYjNWa1pHNHVZMjl0TDNKaGJtc3VkMlZpTG1weklpd2lkWEJrWVhSbFZHbHRaU0k2TFRJNE9EQXdNREF3TENKMklqb2lNUzR3TGpBaWZTeDdJbU55WldGMFpWUnBiV1VpT2kweU9EZ3dNREF3TUN3aVpHVnpZeUk2SXRHbjFMSFA2c2ZwSWl3aWFXUWlPakl3TENKdGFXNTJaWEp6YVc5dUlqb2lNQ0lzSW00aU9pSnpkSFZrWlhSaGFXeHpJaXdpYzNSaGRIVnpJam94TENKMGFXMWxVM1JoYlhBaU9qRTBPVGsyTmpreE9EYzNPREVzSW5SNWNHVWlPakFzSW5VaU9pSm9kSFJ3T2k4dmIyMXFiVE15WkhSckxtSnJkQzVqYkc5MVpHUnVMbU52YlM5emRIVmtaWFJoYVd4ekxuZGxZaTVxY3lJc0luVndaR0YwWlZScGJXVWlPaTB5T0Rnd01EQXdNQ3dpZGlJNklqRXVNQzR3SW4xZA==";
        String value2 = Base64Util.decodeBase64(value3);
        logger.info("value2:" + value2);
        Assert.assertTrue(zw.equals(value2));
    }

    @Test
    public void doubleDecode() {
        String source = "VzNzaVkzSmxZWFJsVkdsdFpTSTZMVEk0T0RBd01EQXdMQ0pwWkNJNk55d2liV2x1ZG1WeWMybHZiaUk2SWpBaUxDSnVJam9pWTJGc1pXNWtaWElpTENKemRHRjBkWE1pT2pFc0luUnBiV1ZUZEdGdGNDSTZNVFV3TURVeE9UUTRPVFF4Tml3aWRIbHdaU0k2TUN3aWRTSTZJbWgwZEhBNkx5OXZiV3B0TXpKa2RHc3VZbXQwTG1Oc2IzVmtaRzR1WTI5dEwyTmhiR1Z1WkdWeUxuZGxZaTVxY3lJc0luVndaR0YwWlZScGJXVWlPakUxTURBMU1UazBPRGt3TURBc0luWWlPaUl4TGpBdU1DSjlMSHNpWTNKbFlYUmxWR2x0WlNJNkxUSTRPREF3TURBd0xDSmtaWE5qSWpvaVB6OC9QejgvSWl3aWFXUWlPamdzSW0xcGJuWmxjbk5wYjI0aU9pSXdJaXdpYmlJNkltTnNZWE56WkdWMFlXbHNJaXdpYzNSaGRIVnpJam94TENKMGFXMWxVM1JoYlhBaU9qRTBPVGsyTmpreE9EYzNPREVzSW5SNWNHVWlPakFzSW5VaU9pSm9kSFJ3T2k4dmIyMXFiVE15WkhSckxtSnJkQzVqYkc5MVpHUnVMbU52YlM5amJHRnpjMlJsZEdGcGJDNTNaV0l1YW5NaUxDSjFjR1JoZEdWVWFXMWxJam90TWpnNE1EQXdNREFzSW5ZaU9pSXhMakF1TUNKOUxIc2lZM0psWVhSbFZHbHRaU0k2TFRJNE9EQXdNREF3TENKa1pYTmpJam9pUHo4L1B6OC9QeUlzSW1sa0lqbzVMQ0p0YVc1MlpYSnphVzl1SWpvaU1DSXNJbTRpT2lKa1pYUmhhV3h6SWl3aWMzUmhkSFZ6SWpveExDSjBhVzFsVTNSaGJYQWlPakUwT1RrMk5qa3hPRGMzT0RFc0luUjVjR1VpT2pBc0luVWlPaUpvZEhSd09pOHZiMjFxYlRNeVpIUnJMbUpyZEM1amJHOTFaR1J1TG1OdmJTOWtaWFJoYVd4ekxuZGxZaTVxY3lJc0luVndaR0YwWlZScGJXVWlPaTB5T0Rnd01EQXdNQ3dpZGlJNklqRXVNQzR3SW4wc2V5SmpjbVZoZEdWVWFXMWxJam90TWpnNE1EQXdNREFzSW1SbGMyTWlPaUkvUHo4L1B6OC9QejhpTENKcFpDSTZNVEFzSW0xcGJuWmxjbk5wYjI0aU9pSXdJaXdpYmlJNkltUndjbVZ3YjNKMElpd2ljM1JoZEhWeklqb3hMQ0owYVcxbFUzUmhiWEFpT2pFME9UazJOamt4T0RjM09ERXNJblI1Y0dVaU9qQXNJblVpT2lKb2RIUndPaTh2YjIxcWJUTXlaSFJyTG1KcmRDNWpiRzkxWkdSdUxtTnZiUzlrY0hKbGNHOXlkQzUzWldJdWFuTWlMQ0oxY0dSaGRHVlVhVzFsSWpvdE1qZzRNREF3TURBc0luWWlPaUl4TGpBdU1DSjlMSHNpWTNKbFlYUmxWR2x0WlNJNkxUSTRPREF3TURBd0xDSmtaWE5qSWpvaVB6OC9QejhpTENKcFpDSTZNVEVzSW0xcGJuWmxjbk5wYjI0aU9pSXdJaXdpYmlJNkltZHZjMmhoY21VaUxDSnpkR0YwZFhNaU9qRXNJblJwYldWVGRHRnRjQ0k2TVRRNU9UWTJPVEU0TnpjNE1Td2lkSGx3WlNJNk1Dd2lkU0k2SW1oMGRIQTZMeTl2YldwdE16SmtkR3N1WW10MExtTnNiM1ZrWkc0dVkyOXRMMmR2YzJoaGNtVXVkMlZpTG1weklpd2lkWEJrWVhSbFZHbHRaU0k2TFRJNE9EQXdNREF3TENKMklqb2lNUzR3TGpBaWZTeDdJbU55WldGMFpWUnBiV1VpT2kweU9EZ3dNREF3TUN3aVpHVnpZeUk2SWo4L1B6OC9JaXdpYVdRaU9qRXlMQ0p0YVc1MlpYSnphVzl1SWpvaU1DSXNJbTRpT2lKb1lXNWtiM1YwSWl3aWMzUmhkSFZ6SWpveExDSjBhVzFsVTNSaGJYQWlPakUwT1RrMk5qa3hPRGMzT0RFc0luUjVjR1VpT2pBc0luVWlPaUpvZEhSd09pOHZiMjFxYlRNeVpIUnJMbUpyZEM1amJHOTFaR1J1TG1OdmJTOW9ZVzVrYjNWMExuZGxZaTVxY3lJc0luVndaR0YwWlZScGJXVWlPaTB5T0Rnd01EQXdNQ3dpZGlJNklqRXVNQzR3SW4wc2V5SmpjbVZoZEdWVWFXMWxJam90TWpnNE1EQXdNREFzSW1SbGMyTWlPaUkvUHo4L1B6OHRQejgvUHo4L0lpd2lhV1FpT2pFekxDSnRhVzUyWlhKemFXOXVJam9pTUNJc0ltNGlPaUpvYVhOMGIzSjVZMmhoY25RaUxDSnpkR0YwZFhNaU9qRXNJblJwYldWVGRHRnRjQ0k2TVRRNU9UWTJPVEU0TnpjNE1Td2lkSGx3WlNJNk1Dd2lkU0k2SW1oMGRIQTZMeTl2YldwdE16SmtkR3N1WW10MExtTnNiM1ZrWkc0dVkyOXRMMmhwYzNSdmNubGphR0Z5ZEM1M1pXSXVhbk1pTENKMWNHUmhkR1ZVYVcxbElqb3RNamc0TURBd01EQXNJbllpT2lJeExqQXVNQ0o5TEhzaVkzSmxZWFJsVkdsdFpTSTZMVEk0T0RBd01EQXdMQ0prWlhOaklqb2lQejgvUHo4L0lpd2lhV1FpT2pFMExDSnRhVzUyWlhKemFXOXVJam9pTUNJc0ltNGlPaUpvYVhOMGIzSjViR2x6ZENJc0luTjBZWFIxY3lJNk1Td2lkR2x0WlZOMFlXMXdJam94TkRrNU5qWTVNVGczTnpneExDSjBlWEJsSWpvd0xDSjFJam9pYUhSMGNEb3ZMMjl0YW0wek1tUjBheTVpYTNRdVkyeHZkV1JrYmk1amIyMHZhR2x6ZEc5eWVXeHBjM1F1ZDJWaUxtcHpJaXdpZFhCa1lYUmxWR2x0WlNJNkxUSTRPREF3TURBd0xDSjJJam9pTVM0d0xqQWlmU3g3SW1OeVpXRjBaVlJwYldVaU9pMHlPRGd3TURBd01Dd2laR1Z6WXlJNklqOC9QejgvUHo4aUxDSnBaQ0k2TVRVc0ltMXBiblpsY25OcGIyNGlPaUl3SWl3aWJpSTZJbWx1WkdWNElpd2ljM1JoZEhWeklqb3hMQ0owYVcxbFUzUmhiWEFpT2pFME9UazJOamt4T0RjM09ERXNJblI1Y0dVaU9qQXNJblVpT2lKb2RIUndPaTh2YjIxcWJUTXlaSFJyTG1KcmRDNWpiRzkxWkdSdUxtTnZiUzlwYm1SbGVDNTNaV0l1YW5NaUxDSjFjR1JoZEdWVWFXMWxJam90TWpnNE1EQXdNREFzSW5ZaU9pSXhMakF1TUNKOUxIc2lZM0psWVhSbFZHbHRaU0k2TFRJNE9EQXdNREF3TENKa1pYTmpJam9pUHo4L0lpd2lhV1FpT2pFMkxDSnRhVzUyWlhKemFXOXVJam9pTUNJc0ltNGlPaUp0WlhOellXZGxJaXdpYzNSaGRIVnpJam94TENKMGFXMWxVM1JoYlhBaU9qRTBPVGsyTmpreE9EYzNPREVzSW5SNWNHVWlPakFzSW5VaU9pSm9kSFJ3T2k4dmIyMXFiVE15WkhSckxtSnJkQzVqYkc5MVpHUnVMbU52YlM5dFpYTnpZV2RsTG5kbFlpNXFjeUlzSW5Wd1pHRjBaVlJwYldVaU9pMHlPRGd3TURBd01Dd2lkaUk2SWpFdU1DNHdJbjBzZXlKamNtVmhkR1ZVYVcxbElqb3RNamc0TURBd01EQXNJbVJsYzJNaU9pSS9QejhpTENKcFpDSTZNVGNzSW0xcGJuWmxjbk5wYjI0aU9pSXdJaXdpYmlJNkltMXBibVVpTENKemRHRjBkWE1pT2pFc0luUnBiV1ZUZEdGdGNDSTZNVFE1T1RZMk9URTROemM0TVN3aWRIbHdaU0k2TUN3aWRTSTZJbWgwZEhBNkx5OXZiV3B0TXpKa2RHc3VZbXQwTG1Oc2IzVmtaRzR1WTI5dEwyMXBibVV1ZDJWaUxtcHpJaXdpZFhCa1lYUmxWR2x0WlNJNkxUSTRPREF3TURBd0xDSjJJam9pTVM0d0xqQWlmU3g3SW1OeVpXRjBaVlJwYldVaU9pMHlPRGd3TURBd01Dd2laR1Z6WXlJNklqOC9QejhpTENKcFpDSTZNVGdzSW0xcGJuWmxjbk5wYjI0aU9pSXdJaXdpYmlJNkltMTVZMnhoYzNNaUxDSnpkR0YwZFhNaU9qRXNJblJwYldWVGRHRnRjQ0k2TVRRNU9UWTJPVEU0TnpjNE1Td2lkSGx3WlNJNk1Dd2lkU0k2SW1oMGRIQTZMeTl2YldwdE16SmtkR3N1WW10MExtTnNiM1ZrWkc0dVkyOXRMMjE1WTJ4aGMzTXVkMlZpTG1weklpd2lkWEJrWVhSbFZHbHRaU0k2TFRJNE9EQXdNREF3TENKMklqb2lNUzR3TGpBaWZTeDdJbU55WldGMFpWUnBiV1VpT2kweU9EZ3dNREF3TUN3aVpHVnpZeUk2SWo4L1A2ZlJQeUlzSW1sa0lqb3hPU3dpYldsdWRtVnljMmx2YmlJNklqQWlMQ0p1SWpvaWNtRnVheUlzSW5OMFlYUjFjeUk2TVN3aWRHbHRaVk4wWVcxd0lqb3hORGs1TmpZNU1UZzNOemd4TENKMGVYQmxJam93TENKMUlqb2lhSFIwY0RvdkwyOXRhbTB6TW1SMGF5NWlhM1F1WTJ4dmRXUmtiaTVqYjIwdmNtRnVheTUzWldJdWFuTWlMQ0oxY0dSaGRHVlVhVzFsSWpvdE1qZzRNREF3TURBc0luWWlPaUl4TGpBdU1DSjlMSHNpWTNKbFlYUmxWR2x0WlNJNkxUSTRPREF3TURBd0xDSmtaWE5qSWpvaVB6OC9QejgvSWl3aWFXUWlPakl3TENKdGFXNTJaWEp6YVc5dUlqb2lNQ0lzSW00aU9pSnpkSFZrWlhSaGFXeHpJaXdpYzNSaGRIVnpJam94TENKMGFXMWxVM1JoYlhBaU9qRTBPVGsyTmpreE9EYzNPREVzSW5SNWNHVWlPakFzSW5VaU9pSm9kSFJ3T2k4dmIyMXFiVE15WkhSckxtSnJkQzVqYkc5MVpHUnVMbU52YlM5emRIVmtaWFJoYVd4ekxuZGxZaTVxY3lJc0luVndaR0YwWlZScGJXVWlPaTB5T0Rnd01EQXdNQ3dpZGlJNklqRXVNQzR3SW4xZA==";
        String value = Base64Util.decodeBase64(Base64Util.decodeBase64(source));
        String value2 = null;
        try {
            value2 = new String(value.getBytes(), "utf-8");
        } catch (Exception e) {

        }
        logger.info("===>value2:" + value2);
        logger.info("===>value:" + value);
    }

    @Test
    public void oneDecode() {
        String source = "W3siY3JlYXRlVGltZSI6LTI4ODAwMDAwLCJpZCI6NywibWludmVyc2lvbiI6IjAiLCJuIjoiY2FsZW5kZXIiLCJzdGF0dXMiOjEsInRpbWVTdGFtcCI6MTUwMDUxOTQ4OTQxNiwidHlwZSI6MCwidSI6Imh0dHA6Ly9vbWptMzJkdGsuYmt0LmNsb3VkZG4uY29tL2NhbGVuZGVyLndlYi5qcyIsInVwZGF0ZVRpbWUiOjE1MDA1MTk0ODkwMDAsInYiOiIxLjAuMCJ9LHsiY3JlYXRlVGltZSI6LTI4ODAwMDAwLCJkZXNjIjoisOC8ts/qx+kiLCJpZCI6OCwibWludmVyc2lvbiI6IjAiLCJuIjoiY2xhc3NkZXRhaWwiLCJzdGF0dXMiOjEsInRpbWVTdGFtcCI6MTQ5OTY2OTE4Nzc4MSwidHlwZSI6MCwidSI6Imh0dHA6Ly9vbWptMzJkdGsuYmt0LmNsb3VkZG4uY29tL2NsYXNzZGV0YWlsLndlYi5qcyIsInVwZGF0ZVRpbWUiOi0yODgwMDAwMCwidiI6IjEuMC4wIn0seyJjcmVhdGVUaW1lIjotMjg4MDAwMDAsImRlc2MiOiLX99K1z+rH6SIsImlkIjo5LCJtaW52ZXJzaW9uIjoiMCIsIm4iOiJkZXRhaWxzIiwic3RhdHVzIjoxLCJ0aW1lU3RhbXAiOjE0OTk2NjkxODc3ODEsInR5cGUiOjAsInUiOiJodHRwOi8vb21qbTMyZHRrLmJrdC5jbG91ZGRuLmNvbS9kZXRhaWxzLndlYi5qcyIsInVwZGF0ZVRpbWUiOi0yODgwMDAwMCwidiI6IjEuMC4wIn0seyJjcmVhdGVUaW1lIjotMjg4MDAwMDAsImRlc2MiOiLLq8qmv87Mw7GouOYiLCJpZCI6MTAsIm1pbnZlcnNpb24iOiIwIiwibiI6ImRwcmVwb3J0Iiwic3RhdHVzIjoxLCJ0aW1lU3RhbXAiOjE0OTk2NjkxODc3ODEsInR5cGUiOjAsInUiOiJodHRwOi8vb21qbTMyZHRrLmJrdC5jbG91ZGRuLmNvbS9kcHJlcG9ydC53ZWIuanMiLCJ1cGRhdGVUaW1lIjotMjg4MDAwMDAsInYiOiIxLjAuMCJ9LHsiY3JlYXRlVGltZSI6LTI4ODAwMDAwLCJkZXNjIjoiyKW31s/tIiwiaWQiOjExLCJtaW52ZXJzaW9uIjoiMCIsIm4iOiJnb3NoYXJlIiwic3RhdHVzIjoxLCJ0aW1lU3RhbXAiOjE0OTk2NjkxODc3ODEsInR5cGUiOjAsInUiOiJodHRwOi8vb21qbTMyZHRrLmJrdC5jbG91ZGRuLmNvbS9nb3NoYXJlLndlYi5qcyIsInVwZGF0ZVRpbWUiOi0yODgwMDAwMCwidiI6IjEuMC4wIn0seyJjcmVhdGVUaW1lIjotMjg4MDAwMDAsImRlc2MiOiK9stLlsum/tCIsImlkIjoxMiwibWludmVyc2lvbiI6IjAiLCJuIjoiaGFuZG91dCIsInN0YXR1cyI6MSwidGltZVN0YW1wIjoxNDk5NjY5MTg3NzgxLCJ0eXBlIjowLCJ1IjoiaHR0cDovL29tam0zMmR0ay5ia3QuY2xvdWRkbi5jb20vaGFuZG91dC53ZWIuanMiLCJ1cGRhdGVUaW1lIjotMjg4MDAwMDAsInYiOiIxLjAuMCJ9LHsiY3JlYXRlVGltZSI6LTI4ODAwMDAwLCJkZXNjIjoisOC8ts/qx+ktwPrKt8r9vt0iLCJpZCI6MTMsIm1pbnZlcnNpb24iOiIwIiwibiI6Imhpc3RvcnljaGFydCIsInN0YXR1cyI6MSwidGltZVN0YW1wIjoxNDk5NjY5MTg3NzgxLCJ0eXBlIjowLCJ1IjoiaHR0cDovL29tam0zMmR0ay5ia3QuY2xvdWRkbi5jb20vaGlzdG9yeWNoYXJ0LndlYi5qcyIsInVwZGF0ZVRpbWUiOi0yODgwMDAwMCwidiI6IjEuMC4wIn0seyJjcmVhdGVUaW1lIjotMjg4MDAwMDAsImRlc2MiOiLA+sq3yv2+3SIsImlkIjoxNCwibWludmVyc2lvbiI6IjAiLCJuIjoiaGlzdG9yeWxpc3QiLCJzdGF0dXMiOjEsInRpbWVTdGFtcCI6MTQ5OTY2OTE4Nzc4MSwidHlwZSI6MCwidSI6Imh0dHA6Ly9vbWptMzJkdGsuYmt0LmNsb3VkZG4uY29tL2hpc3RvcnlsaXN0LndlYi5qcyIsInVwZGF0ZVRpbWUiOi0yODgwMDAwMCwidiI6IjEuMC4wIn0seyJjcmVhdGVUaW1lIjotMjg4MDAwMDAsImRlc2MiOiKwrtGnz7C9zMqmIiwiaWQiOjE1LCJtaW52ZXJzaW9uIjoiMCIsIm4iOiJpbmRleCIsInN0YXR1cyI6MSwidGltZVN0YW1wIjoxNDk5NjY5MTg3NzgxLCJ0eXBlIjowLCJ1IjoiaHR0cDovL29tam0zMmR0ay5ia3QuY2xvdWRkbi5jb20vaW5kZXgud2ViLmpzIiwidXBkYXRlVGltZSI6LTI4ODAwMDAwLCJ2IjoiMS4wLjAifSx7ImNyZWF0ZVRpbWUiOi0yODgwMDAwMCwiZGVzYyI6Is/7z6IiLCJpZCI6MTYsIm1pbnZlcnNpb24iOiIwIiwibiI6Im1lc3NhZ2UiLCJzdGF0dXMiOjEsInRpbWVTdGFtcCI6MTQ5OTY2OTE4Nzc4MSwidHlwZSI6MCwidSI6Imh0dHA6Ly9vbWptMzJkdGsuYmt0LmNsb3VkZG4uY29tL21lc3NhZ2Uud2ViLmpzIiwidXBkYXRlVGltZSI6LTI4ODAwMDAwLCJ2IjoiMS4wLjAifSx7ImNyZWF0ZVRpbWUiOi0yODgwMDAwMCwiZGVzYyI6Is7StcQiLCJpZCI6MTcsIm1pbnZlcnNpb24iOiIwIiwibiI6Im1pbmUiLCJzdGF0dXMiOjEsInRpbWVTdGFtcCI6MTQ5OTY2OTE4Nzc4MSwidHlwZSI6MCwidSI6Imh0dHA6Ly9vbWptMzJkdGsuYmt0LmNsb3VkZG4uY29tL21pbmUud2ViLmpzIiwidXBkYXRlVGltZSI6LTI4ODAwMDAwLCJ2IjoiMS4wLjAifSx7ImNyZWF0ZVRpbWUiOi0yODgwMDAwMCwiZGVzYyI6Is7StcSw4Ly2IiwiaWQiOjE4LCJtaW52ZXJzaW9uIjoiMCIsIm4iOiJteWNsYXNzIiwic3RhdHVzIjoxLCJ0aW1lU3RhbXAiOjE0OTk2NjkxODc3ODEsInR5cGUiOjAsInUiOiJodHRwOi8vb21qbTMyZHRrLmJrdC5jbG91ZGRuLmNvbS9teWNsYXNzLndlYi5qcyIsInVwZGF0ZVRpbWUiOi0yODgwMDAwMCwidiI6IjEuMC4wIn0seyJjcmVhdGVUaW1lIjotMjg4MDAwMDAsImRlc2MiOiLFxdDQsPEiLCJpZCI6MTksIm1pbnZlcnNpb24iOiIwIiwibiI6InJhbmsiLCJzdGF0dXMiOjEsInRpbWVTdGFtcCI6MTQ5OTY2OTE4Nzc4MSwidHlwZSI6MCwidSI6Imh0dHA6Ly9vbWptMzJkdGsuYmt0LmNsb3VkZG4uY29tL3Jhbmsud2ViLmpzIiwidXBkYXRlVGltZSI6LTI4ODAwMDAwLCJ2IjoiMS4wLjAifSx7ImNyZWF0ZVRpbWUiOi0yODgwMDAwMCwiZGVzYyI6ItGn1LHP6sfpIiwiaWQiOjIwLCJtaW52ZXJzaW9uIjoiMCIsIm4iOiJzdHVkZXRhaWxzIiwic3RhdHVzIjoxLCJ0aW1lU3RhbXAiOjE0OTk2NjkxODc3ODEsInR5cGUiOjAsInUiOiJodHRwOi8vb21qbTMyZHRrLmJrdC5jbG91ZGRuLmNvbS9zdHVkZXRhaWxzLndlYi5qcyIsInVwZGF0ZVRpbWUiOi0yODgwMDAwMCwidiI6IjEuMC4wIn1d/qx+kiLCJpZCI6OCwibWludmVyc2lvbiI6IjAiLCJuIjoiY2xhc3NkZXRhaWwiLCJzdGF0dXMiOjEsInRpbWVTdGFtcCI6MTQ5OTY2OTE4Nzc4MSwidHlwZSI6MCwidSI6Imh0dHA6Ly9vbWptMzJkdGsuYmt0LmNsb3VkZG4uY29tL2NsYXNzZGV0YWlsLndlYi5qcyIsInVwZGF0ZVRpbWUiOi0yODgwMDAwMCwidiI6IjEuMC4wIn0seyJjcmVhdGVUaW1lIjotMjg4MDAwMDAsImRlc2MiOiLX99K1z+rH6SIsImlkIjo5LCJtaW52ZXJzaW9uIjoiMCIsIm4iOiJkZXRhaWxzIiwic3RhdHVzIjoxLCJ0aW1lU3RhbXAiOjE0OTk2NjkxODc3ODEsInR5cGUiOjAsInUiOiJodHRwOi8vb21qbTMyZHRrLmJrdC5jbG91ZGRuLmNvbS9kZXRhaWxzLndlYi5qcyIsInVwZGF0ZVRpbWUiOi0yODgwMDAwMCwidiI6IjEuMC4wIn0seyJjcmVhdGVUaW1lIjotMjg4MDAwMDAsImRlc2MiOiLLq8qmv87Mw7GouOYiLCJpZCI6MTAsIm1pbnZlcnNpb24iOiIwIiwibiI6ImRwcmVwb3J0Iiwic3RhdHVzIjoxLCJ0aW1lU3RhbXAiOjE0OTk2NjkxODc3ODEsInR5cGUiOjAsInUiOiJodHRwOi8vb21qbTMyZHRrLmJrdC5jbG91ZGRuLmNvbS9kcHJlcG9ydC53ZWIuanMiLCJ1cGRhdGVUaW1lIjotMjg4MDAwMDAsInYiOiIxLjAuMCJ9LHsiY3JlYXRlVGltZSI6LTI4ODAwMDAwLCJkZXNjIjoiyKW31s/tIiwiaWQiOjExLCJtaW52ZXJzaW9uIjoiMCIsIm4iOiJnb3NoYXJlIiwic3RhdHVzIjoxLCJ0aW1lU3RhbXAiOjE0OTk2NjkxODc3ODEsInR5cGUiOjAsInUiOiJodHRwOi8vb21qbTMyZHRrLmJrdC5jbG91ZGRuLmNvbS9nb3NoYXJlLndlYi5qcyIsInVwZGF0ZVRpbWUiOi0yODgwMDAwMCwidiI6IjEuMC4wIn0seyJjcmVhdGVUaW1lIjotMjg4MDAwMDAsImRlc2MiOiK9stLlsum/tCIsImlkIjoxMiwibWludmVyc2lvbiI6IjAiLCJuIjoiaGFuZG91dCIsInN0YXR1cyI6MSwidGltZVN0YW1wIjoxNDk5NjY5MTg3NzgxLCJ0eXBlIjowLCJ1IjoiaHR0cDovL29tam0zMmR0ay5ia3QuY2xvdWRkbi5jb20vaGFuZG91dC53ZWIuanMiLCJ1cGRhdGVUaW1lIjotMjg4MDAwMDAsInYiOiIxLjAuMCJ9LHsiY3JlYXRlVGltZSI6LTI4ODAwMDAwLCJkZXNjIjoisOC8ts/qx+ktwPrKt8r9vt0iLCJpZCI6MTMsIm1pbnZlcnNpb24iOiIwIiwibiI6Imhpc3RvcnljaGFydCIsInN0YXR1cyI6MSwidGltZVN0YW1wIjoxNDk5NjY5MTg3NzgxLCJ0eXBlIjowLCJ1IjoiaHR0cDovL29tam0zMmR0ay5ia3QuY2xvdWRkbi5jb20vaGlzdG9yeWNoYXJ0LndlYi5qcyIsInVwZGF0ZVRpbWUiOi0yODgwMDAwMCwidiI6IjEuMC4wIn0seyJjcmVhdGVUaW1lIjotMjg4MDAwMDAsImRlc2MiOiLA+sq3yv2+3SIsImlkIjoxNCwibWludmVyc2lvbiI6IjAiLCJuIjoiaGlzdG9yeWxpc3QiLCJzdGF0dXMiOjEsInRpbWVTdGFtcCI6MTQ5OTY2OTE4Nzc4MSwidHlwZSI6MCwidSI6Imh0dHA6Ly9vbWptMzJkdGsuYmt0LmNsb3VkZG4uY29tL2hpc3RvcnlsaXN0LndlYi5qcyIsInVwZGF0ZVRpbWUiOi0yODgwMDAwMCwidiI6IjEuMC4wIn0seyJjcmVhdGVUaW1lIjotMjg4MDAwMDAsImRlc2MiOiKwrtGnz7C9zMqmIiwiaWQiOjE1LCJtaW52ZXJzaW9uIjoiMCIsIm4iOiJpbmRleCIsInN0YXR1cyI6MSwidGltZVN0YW1wIjoxNDk5NjY5MTg3NzgxLCJ0eXBlIjowLCJ1IjoiaHR0cDovL29tam0zMmR0ay5ia3QuY2xvdWRkbi5jb20vaW5kZXgud2ViLmpzIiwidXBkYXRlVGltZSI6LTI4ODAwMDAwLCJ2IjoiMS4wLjAifSx7ImNyZWF0ZVRpbWUiOi0yODgwMDAwMCwiZGVzYyI6Is/7z6IiLCJpZCI6MTYsIm1pbnZlcnNpb24iOiIwIiwibiI6Im1lc3NhZ2UiLCJzdGF0dXMiOjEsInRpbWVTdGFtcCI6MTQ5OTY2OTE4Nzc4MSwidHlwZSI6MCwidSI6Imh0dHA6Ly9vbWptMzJkdGsuYmt0LmNsb3VkZG4uY29tL21lc3NhZ2Uud2ViLmpzIiwidXBkYXRlVGltZSI6LTI4ODAwMDAwLCJ2IjoiMS4wLjAifSx7ImNyZWF0ZVRpbWUiOi0yODgwMDAwMCwiZGVzYyI6Is7StcQiLCJpZCI6MTcsIm1pbnZlcnNpb24iOiIwIiwibiI6Im1pbmUiLCJzdGF0dXMiOjEsInRpbWVTdGFtcCI6MTQ5OTY2OTE4Nzc4MSwidHlwZSI6MCwidSI6Imh0dHA6Ly9vbWptMzJkdGsuYmt0LmNsb3VkZG4uY29tL21pbmUud2ViLmpzIiwidXBkYXRlVGltZSI6LTI4ODAwMDAwLCJ2IjoiMS4wLjAifSx7ImNyZWF0ZVRpbWUiOi0yODgwMDAwMCwiZGVzYyI6Is7StcSw4Ly2IiwiaWQiOjE4LCJtaW52ZXJzaW9uIjoiMCIsIm4iOiJteWNsYXNzIiwic3RhdHVzIjoxLCJ0aW1lU3RhbXAiOjE0OTk2NjkxODc3ODEsInR5cGUiOjAsInUiOiJodHRwOi8vb21qbTMyZHRrLmJrdC5jbG91ZGRuLmNvbS9teWNsYXNzLndlYi5qcyIsInVwZGF0ZVRpbWUiOi0yODgwMDAwMCwidiI6IjEuMC4wIn0seyJjcmVhdGVUaW1lIjotMjg4MDAwMDAsImRlc2MiOiLFxdDQsPEiLCJpZCI6MTksIm1pbnZlcnNpb24iOiIwIiwibiI6InJhbmsiLCJzdGF0dXMiOjEsInRpbWVTdGFtcCI6MTQ5OTY2OTE4Nzc4MSwidHlwZSI6MCwidSI6Imh0dHA6Ly9vbWptMzJkdGsuYmt0LmNsb3VkZG4uY29tL3Jhbmsud2ViLmpzIiwidXBkYXRlVGltZSI6LTI4ODAwMDAwLCJ2IjoiMS4wLjAifSx7ImNyZWF0ZVRpbWUiOi0yODgwMDAwMCwiZGVzYyI6ItGn1LHP6sfpIiwiaWQiOjIwLCJtaW52ZXJzaW9uIjoiMCIsIm4iOiJzdHVkZXRhaWxzIiwic3RhdHVzIjoxLCJ0aW1lU3RhbXAiOjE0OTk2NjkxODc3ODEsInR5cGUiOjAsInUiOiJodHRwOi8vb21qbTMyZHRrLmJrdC5jbG91ZGRuLmNvbS9zdHVkZXRhaWxzLndlYi5qcyIsInVwZGF0ZVRpbWUiOi0yODgwMDAwMCwidiI6IjEuMC4wIn1d";
        String value = Base64Util.decodeBase64(source);
        logger.info("===>value:" + value);
    }

}